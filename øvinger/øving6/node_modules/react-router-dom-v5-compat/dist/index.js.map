{"version":3,"file":"index.js","sources":["../react-router-dom/dom.ts","../react-router-dom/index.tsx","../lib/components.tsx"],"sourcesContent":["import type { FormEncType, FormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method: method.toLowerCase(), encType, formData };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_enhanceManualRouteObjects as enhanceManualRouteObjects,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  Router as RemixRouter,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  UNSAFE_invariant as invariant,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_enhanceManualRouteObjects,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + to)\n          : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as FormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmitImpl = \"useSubmitImpl\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace/preventScrollReset because they are not\n    // navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"preventScrollReset\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n//#endregion\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n","import * as React from \"react\";\nimport type { Location, To } from \"history\";\nimport { Action, createPath, parsePath } from \"history\";\n\n// Get useHistory from react-router-dom v5 (peer dep).\n// @ts-expect-error\nimport { useHistory, Route as RouteV5 } from \"react-router-dom\";\n\n// We are a wrapper around react-router-dom v6, so bring it in\n// and bundle it because an app can't have two versions of\n// react-router-dom in its package.json.\nimport { Router, Routes, Route } from \"../react-router-dom\";\n\n// v5 isn't in TypeScript, they'll also lose the @types/react-router with this\n// but not worried about that for now.\nexport function CompatRoute(props: any) {\n  let { location, path } = props;\n  if (!props.exact) path += \"/*\";\n  return (\n    <Routes location={location}>\n      <Route path={path} element={<RouteV5 {...props} />} />\n    </Routes>\n  );\n}\n\n// Copied with 💜 from https://github.com/bvaughn/react-resizable-panels/blob/main/packages/react-resizable-panels/src/hooks/useIsomorphicEffect.ts\nconst canUseEffectHooks = !!(\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\"\n);\n\nconst useIsomorphicLayoutEffect = canUseEffectHooks\n  ? React.useLayoutEffect\n  : () => {};\n\nexport function CompatRouter({ children }: { children: React.ReactNode }) {\n  let history = useHistory();\n  let [state, setState] = React.useState(() => ({\n    location: history.location,\n    action: history.action,\n  }));\n\n  useIsomorphicLayoutEffect(() => {\n    history.listen((location: Location, action: Action) =>\n      setState({ location, action })\n    );\n  }, [history]);\n\n  return (\n    <Router\n      navigationType={state.action}\n      location={state.location}\n      navigator={history}\n    >\n      <Routes>\n        <Route path=\"*\" element={children} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport interface StaticRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n}\n\n/**\n * A <Router> that may not navigate to any other location. This is useful\n * on the server where there is no stateful UI.\n */\nexport function StaticRouter({\n  basename,\n  children,\n  location: locationProp = \"/\",\n}: StaticRouterProps) {\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let action = Action.Pop;\n  let location: Location = {\n    pathname: locationProp.pathname || \"/\",\n    search: locationProp.search || \"\",\n    hash: locationProp.hash || \"\",\n    state: locationProp.state || null,\n    key: locationProp.key || \"default\",\n  };\n\n  let staticNavigator = {\n    createHref(to: To) {\n      return typeof to === \"string\" ? to : createPath(to);\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to: To) {\n      throw new Error(\n        `You cannot use navigator.push() on the server because it is a stateless ` +\n          `environment. This error was probably triggered when you did a ` +\n          `\\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`\n      );\n    },\n    replace(to: To) {\n      throw new Error(\n        `You cannot use navigator.replace() on the server because it is a stateless ` +\n          `environment. This error was probably triggered when you did a ` +\n          `\\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere ` +\n          `in your app.`\n      );\n    },\n    go(delta: number) {\n      throw new Error(\n        `You cannot use navigator.go() on the server because it is a stateless ` +\n          `environment. This error was probably triggered when you did a ` +\n          `\\`navigate(${delta})\\` somewhere in your app.`\n      );\n    },\n    back() {\n      throw new Error(\n        `You cannot use navigator.back() on the server because it is a stateless ` +\n          `environment.`\n      );\n    },\n    forward() {\n      throw new Error(\n        `You cannot use navigator.forward() on the server because it is a stateless ` +\n          `environment.`\n      );\n    },\n  };\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={location}\n      navigationType={action}\n      navigator={staticNavigator}\n      static={true}\n    />\n  );\n}\n"],"names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","shouldProcessLinkClick","target","button","createSearchParams","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","getSearchParamsForLocation","locationSearch","defaultSearchParams","searchParams","has","getAll","forEach","append","getFormSubmissionInfo","defaultAction","options","method","action","encType","formData","submissionTrigger","getAttribute","FormData","name","type","form","Error","protocol","host","window","location","url","URL","BrowserRouter","basename","children","historyRef","React","useRef","current","createBrowserHistory","v5Compat","history","state","setState","useState","useLayoutEffect","listen","createElement","Router","navigationType","navigator","HashRouter","createHashHistory","HistoryRouter","displayName","isBrowser","document","ABSOLUTE_URL_REGEX","Link","forwardRef","LinkWithRef","ref","onClick","relative","reloadDocument","replace","to","preventScrollReset","rest","useContext","NavigationContext","absoluteHref","isExternal","test","currentUrl","href","targetUrl","startsWith","path","stripBasename","pathname","origin","search","hash","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","useResolvedPath","useLocation","routerState","DataRouterStateContext","toPathname","encodeLocation","locationPathname","nextLocationPathname","navigation","isActive","charAt","length","isPending","ariaCurrent","undefined","filter","Boolean","join","Form","props","FormImpl","forwardedRef","onSubmit","fetcherKey","routeId","submit","useSubmitImpl","formMethod","formAction","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","DataRouterContext","invariant","replaceProp","navigate","useNavigate","useCallback","createPath","useSearchParams","defaultInit","warning","defaultSearchParamsRef","hasSetSearchParamsRef","useMemo","setSearchParams","nextInit","navigateOptions","newSearchParams","router","UseSubmitImpl","opts","formEncType","fetch","routeContext","RouteContext","match","matches","slice","route","index","params","delete","toString","joinPaths","cond","message","console","warn","e","CompatRoute","exact","Routes","Route","element","RouteV5","canUseEffectHooks","useIsomorphicLayoutEffect","CompatRouter","useHistory","StaticRouter","locationProp","parsePath","Action","Pop","staticNavigator","createHref","push","JSON","stringify","go","delta","back","forward","static"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,MAAMA,aAAa,GAAG,KAAtB,CAAA;AACP,MAAMC,cAAc,GAAG,mCAAvB,CAAA;AAEM,SAAUC,aAAV,CAAwBC,MAAxB,EAAmC;EACvC,OAAOA,MAAM,IAAI,IAAV,IAAkB,OAAOA,MAAM,CAACC,OAAd,KAA0B,QAAnD,CAAA;AACD,CAAA;AAEK,SAAUC,eAAV,CAA0BF,MAA1B,EAAqC;EACzC,OAAOD,aAAa,CAACC,MAAD,CAAb,IAAyBA,MAAM,CAACC,OAAP,CAAeE,WAAf,EAAA,KAAiC,QAAjE,CAAA;AACD,CAAA;AAEK,SAAUC,aAAV,CAAwBJ,MAAxB,EAAmC;EACvC,OAAOD,aAAa,CAACC,MAAD,CAAb,IAAyBA,MAAM,CAACC,OAAP,CAAeE,WAAf,EAAA,KAAiC,MAAjE,CAAA;AACD,CAAA;AAEK,SAAUE,cAAV,CAAyBL,MAAzB,EAAoC;EACxC,OAAOD,aAAa,CAACC,MAAD,CAAb,IAAyBA,MAAM,CAACC,OAAP,CAAeE,WAAf,EAAA,KAAiC,OAAjE,CAAA;AACD,CAAA;;AAOD,SAASG,eAAT,CAAyBC,KAAzB,EAAiD;AAC/C,EAAA,OAAO,CAAC,EAAEA,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACE,MAAvB,IAAiCF,KAAK,CAACG,OAAvC,IAAkDH,KAAK,CAACI,QAA1D,CAAR,CAAA;AACD,CAAA;;AAEe,SAAAC,sBAAA,CACdL,KADc,EAEdM,MAFc,EAEC;AAEf,EAAA,OACEN,KAAK,CAACO,MAAN,KAAiB,CAAjB;AACC,EAAA,CAACD,MAAD,IAAWA,MAAM,KAAK,OADvB,CACmC;AACnC,EAAA,CAACP,eAAe,CAACC,KAAD,CAHlB;AAAA,GAAA;AAKD,CAAA;AAUD;;;;;;;;;;;;;;;;;;;;AAoBG;;AACa,SAAAQ,kBAAA,CACdC,IADc,EACgB;AAAA,EAAA,IAA9BA,IAA8B,KAAA,KAAA,CAAA,EAAA;AAA9BA,IAAAA,IAA8B,GAAF,EAAE,CAAA;AAAA,GAAA;;AAE9B,EAAA,OAAO,IAAIC,eAAJ,CACL,OAAOD,IAAP,KAAgB,QAAhB,IACAE,KAAK,CAACC,OAAN,CAAcH,IAAd,CADA,IAEAA,IAAI,YAAYC,eAFhB,GAGID,IAHJ,GAIII,MAAM,CAACC,IAAP,CAAYL,IAAZ,CAAA,CAAkBM,MAAlB,CAAyB,CAACC,IAAD,EAAOC,GAAP,KAAc;AACrC,IAAA,IAAIC,KAAK,GAAGT,IAAI,CAACQ,GAAD,CAAhB,CAAA;AACA,IAAA,OAAOD,IAAI,CAACG,MAAL,CACLR,KAAK,CAACC,OAAN,CAAcM,KAAd,CAAA,GAAuBA,KAAK,CAACE,GAAN,CAAWC,CAAD,IAAO,CAACJ,GAAD,EAAMI,CAAN,CAAjB,CAAvB,GAAoD,CAAC,CAACJ,GAAD,EAAMC,KAAN,CAAD,CAD/C,CAAP,CAAA;GAFF,EAKG,EALH,CALC,CAAP,CAAA;AAYD,CAAA;AAEe,SAAAI,0BAAA,CACdC,cADc,EAEdC,mBAFc,EAE6B;AAE3C,EAAA,IAAIC,YAAY,GAAGjB,kBAAkB,CAACe,cAAD,CAArC,CAAA;;AAEA,EAAA,IAAIC,mBAAJ,EAAyB;AACvB,IAAA,KAAK,IAAIP,GAAT,IAAgBO,mBAAmB,CAACV,IAApB,EAAhB,EAA4C;AAC1C,MAAA,IAAI,CAACW,YAAY,CAACC,GAAb,CAAiBT,GAAjB,CAAL,EAA4B;QAC1BO,mBAAmB,CAACG,MAApB,CAA2BV,GAA3B,EAAgCW,OAAhC,CAAyCV,KAAD,IAAU;AAChDO,UAAAA,YAAY,CAACI,MAAb,CAAoBZ,GAApB,EAAyBC,KAAzB,CAAA,CAAA;SADF,CAAA,CAAA;AAGD,OAAA;AACF,KAAA;AACF,GAAA;;AAED,EAAA,OAAOO,YAAP,CAAA;AACD,CAAA;SA6CeK,sBACdxB,QAQAyB,eACAC,SAAsB;AAOtB,EAAA,IAAIC,MAAJ,CAAA;AACA,EAAA,IAAIC,MAAJ,CAAA;AACA,EAAA,IAAIC,OAAJ,CAAA;AACA,EAAA,IAAIC,QAAJ,CAAA;;AAEA,EAAA,IAAIvC,aAAa,CAACS,MAAD,CAAjB,EAA2B;AACzB,IAAA,IAAI+B,iBAAiB,GACnBL,OACD,CAACK,iBAFF,CAAA;AAIAJ,IAAAA,MAAM,GAAGD,OAAO,CAACC,MAAR,IAAkB3B,MAAM,CAACgC,YAAP,CAAoB,QAApB,CAAlB,IAAmDhD,aAA5D,CAAA;AACA4C,IAAAA,MAAM,GAAGF,OAAO,CAACE,MAAR,IAAkB5B,MAAM,CAACgC,YAAP,CAAoB,QAApB,CAAlB,IAAmDP,aAA5D,CAAA;AACAI,IAAAA,OAAO,GACLH,OAAO,CAACG,OAAR,IAAmB7B,MAAM,CAACgC,YAAP,CAAoB,SAApB,CAAnB,IAAqD/C,cADvD,CAAA;AAGA6C,IAAAA,QAAQ,GAAG,IAAIG,QAAJ,CAAajC,MAAb,CAAX,CAAA;;AAEA,IAAA,IAAI+B,iBAAiB,IAAIA,iBAAiB,CAACG,IAA3C,EAAiD;MAC/CJ,QAAQ,CAACP,MAAT,CAAgBQ,iBAAiB,CAACG,IAAlC,EAAwCH,iBAAiB,CAACnB,KAA1D,CAAA,CAAA;AACD,KAAA;GAdH,MAeO,IACLvB,eAAe,CAACW,MAAD,CAAf,IACCR,cAAc,CAACQ,MAAD,CAAd,KACEA,MAAM,CAACmC,IAAP,KAAgB,QAAhB,IAA4BnC,MAAM,CAACmC,IAAP,KAAgB,OAD9C,CAFI,EAIL;AACA,IAAA,IAAIC,IAAI,GAAGpC,MAAM,CAACoC,IAAlB,CAAA;;IAEA,IAAIA,IAAI,IAAI,IAAZ,EAAkB;MAChB,MAAM,IAAIC,KAAJ,CAAN,sEAAA,CAAA,CAAA;AAGD,KAPD;;;AAWAV,IAAAA,MAAM,GACJD,OAAO,CAACC,MAAR,IACA3B,MAAM,CAACgC,YAAP,CAAoB,YAApB,CADA,IAEAI,IAAI,CAACJ,YAAL,CAAkB,QAAlB,CAFA,IAGAhD,aAJF,CAAA;AAKA4C,IAAAA,MAAM,GACJF,OAAO,CAACE,MAAR,IACA5B,MAAM,CAACgC,YAAP,CAAoB,YAApB,CADA,IAEAI,IAAI,CAACJ,YAAL,CAAkB,QAAlB,CAFA,IAGAP,aAJF,CAAA;AAKAI,IAAAA,OAAO,GACLH,OAAO,CAACG,OAAR,IACA7B,MAAM,CAACgC,YAAP,CAAoB,aAApB,CADA,IAEAI,IAAI,CAACJ,YAAL,CAAkB,SAAlB,CAFA,IAGA/C,cAJF,CAAA;AAMA6C,IAAAA,QAAQ,GAAG,IAAIG,QAAJ,CAAaG,IAAb,CAAX,CA3BA;AA8BA;;IACA,IAAIpC,MAAM,CAACkC,IAAX,EAAiB;MACfJ,QAAQ,CAACP,MAAT,CAAgBvB,MAAM,CAACkC,IAAvB,EAA6BlC,MAAM,CAACY,KAApC,CAAA,CAAA;AACD,KAAA;AACF,GAtCM,MAsCA,IAAI1B,aAAa,CAACc,MAAD,CAAjB,EAA2B;AAChC,IAAA,MAAM,IAAIqC,KAAJ,CACJ,yDAAA,GAAA,+BADI,CAAN,CAAA;AAID,GALM,MAKA;AACLV,IAAAA,MAAM,GAAGD,OAAO,CAACC,MAAR,IAAkB3C,aAA3B,CAAA;AACA4C,IAAAA,MAAM,GAAGF,OAAO,CAACE,MAAR,IAAkBH,aAA3B,CAAA;AACAI,IAAAA,OAAO,GAAGH,OAAO,CAACG,OAAR,IAAmB5C,cAA7B,CAAA;;IAEA,IAAIe,MAAM,YAAYiC,QAAtB,EAAgC;AAC9BH,MAAAA,QAAQ,GAAG9B,MAAX,CAAA;AACD,KAFD,MAEO;MACL8B,QAAQ,GAAG,IAAIG,QAAJ,EAAX,CAAA;;MAEA,IAAIjC,MAAM,YAAYI,eAAtB,EAAuC;QACrC,KAAK,IAAI,CAAC8B,IAAD,EAAOtB,KAAP,CAAT,IAA0BZ,MAA1B,EAAkC;AAChC8B,UAAAA,QAAQ,CAACP,MAAT,CAAgBW,IAAhB,EAAsBtB,KAAtB,CAAA,CAAA;AACD,SAAA;AACF,OAJD,MAIO,IAAIZ,MAAM,IAAI,IAAd,EAAoB;QACzB,KAAK,IAAIkC,IAAT,IAAiB3B,MAAM,CAACC,IAAP,CAAYR,MAAZ,CAAjB,EAAsC;UACpC8B,QAAQ,CAACP,MAAT,CAAgBW,IAAhB,EAAsBlC,MAAM,CAACkC,IAAD,CAA5B,CAAA,CAAA;AACD,SAAA;AACF,OAAA;AACF,KAAA;AACF,GAAA;;EAED,IAAI;IAAEI,QAAF;AAAYC,IAAAA,IAAAA;GAASC,GAAAA,MAAM,CAACC,QAAhC,CAAA;EACA,IAAIC,GAAG,GAAG,IAAIC,GAAJ,CAAQf,MAAR,EAAmBU,QAAnB,GAAgCC,IAAAA,GAAAA,IAAhC,CAAV,CAAA;EAEA,OAAO;IAAEG,GAAF;AAAOf,IAAAA,MAAM,EAAEA,MAAM,CAACrC,WAAP,EAAf;IAAqCuC,OAArC;AAA8CC,IAAAA,QAAAA;GAArD,CAAA;AACD;;;;;AC4BD;;AAEG;;;AACG,SAAUc,aAAV,CAIe,IAAA,EAAA;EAAA,IAJS;IAC5BC,QAD4B;IAE5BC,QAF4B;AAG5BN,IAAAA,MAAAA;GACmB,GAAA,IAAA,CAAA;AACnB,EAAA,IAAIO,UAAU,GAAGC,KAAK,CAACC,MAAN,EAAjB,CAAA;;AACA,EAAA,IAAIF,UAAU,CAACG,OAAX,IAAsB,IAA1B,EAAgC;AAC9BH,IAAAA,UAAU,CAACG,OAAX,GAAqBC,oBAAoB,CAAC;MAAEX,MAAF;AAAUY,MAAAA,QAAQ,EAAE,IAAA;AAApB,KAAD,CAAzC,CAAA;AACD,GAAA;;AAED,EAAA,IAAIC,OAAO,GAAGN,UAAU,CAACG,OAAzB,CAAA;EACA,IAAI,CAACI,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAAN,CAAe;IACrC5B,MAAM,EAAEyB,OAAO,CAACzB,MADqB;IAErCa,QAAQ,EAAEY,OAAO,CAACZ,QAAAA;AAFmB,GAAf,CAAxB,CAAA;AAKAO,EAAAA,KAAK,CAACS,eAAN,CAAsB,MAAMJ,OAAO,CAACK,MAAR,CAAeH,QAAf,CAA5B,EAAsD,CAACF,OAAD,CAAtD,CAAA,CAAA;AAEA,EAAA,oBACEL,KAAA,CAAAW,aAAA,CAACC,MAAD,EAAO;AACLf,IAAAA,QAAQ,EAAEA,QADL;AAELC,IAAAA,QAAQ,EAAEA,QAFL;IAGLL,QAAQ,EAAEa,KAAK,CAACb,QAHX;IAILoB,cAAc,EAAEP,KAAK,CAAC1B,MAJjB;AAKLkC,IAAAA,SAAS,EAAET,OAAAA;AALN,GAAP,CADF,CAAA;AASD,CAAA;AAQD;;;AAGG;;AACG,SAAUU,UAAV,CAAoE,KAAA,EAAA;EAAA,IAA/C;IAAElB,QAAF;IAAYC,QAAZ;AAAsBN,IAAAA,MAAAA;GAAyB,GAAA,KAAA,CAAA;AACxE,EAAA,IAAIO,UAAU,GAAGC,KAAK,CAACC,MAAN,EAAjB,CAAA;;AACA,EAAA,IAAIF,UAAU,CAACG,OAAX,IAAsB,IAA1B,EAAgC;AAC9BH,IAAAA,UAAU,CAACG,OAAX,GAAqBc,iBAAiB,CAAC;MAAExB,MAAF;AAAUY,MAAAA,QAAQ,EAAE,IAAA;AAApB,KAAD,CAAtC,CAAA;AACD,GAAA;;AAED,EAAA,IAAIC,OAAO,GAAGN,UAAU,CAACG,OAAzB,CAAA;EACA,IAAI,CAACI,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAAN,CAAe;IACrC5B,MAAM,EAAEyB,OAAO,CAACzB,MADqB;IAErCa,QAAQ,EAAEY,OAAO,CAACZ,QAAAA;AAFmB,GAAf,CAAxB,CAAA;AAKAO,EAAAA,KAAK,CAACS,eAAN,CAAsB,MAAMJ,OAAO,CAACK,MAAR,CAAeH,QAAf,CAA5B,EAAsD,CAACF,OAAD,CAAtD,CAAA,CAAA;AAEA,EAAA,oBACEL,KAAA,CAAAW,aAAA,CAACC,MAAD,EAAO;AACLf,IAAAA,QAAQ,EAAEA,QADL;AAELC,IAAAA,QAAQ,EAAEA,QAFL;IAGLL,QAAQ,EAAEa,KAAK,CAACb,QAHX;IAILoB,cAAc,EAAEP,KAAK,CAAC1B,MAJjB;AAKLkC,IAAAA,SAAS,EAAET,OAAAA;AALN,GAAP,CADF,CAAA;AASD,CAAA;AAQD;;;;;AAKG;;AACH,SAASY,aAAT,CAA0E,KAAA,EAAA;EAAA,IAAnD;IAAEpB,QAAF;IAAYC,QAAZ;AAAsBO,IAAAA,OAAAA;GAA6B,GAAA,KAAA,CAAA;EACxE,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAAN,CAAe;IACvC5B,MAAM,EAAEyB,OAAO,CAACzB,MADuB;IAEvCa,QAAQ,EAAEY,OAAO,CAACZ,QAAAA;AAFqB,GAAf,CAA1B,CAAA;AAKAO,EAAAA,KAAK,CAACS,eAAN,CAAsB,MAAMJ,OAAO,CAACK,MAAR,CAAeH,QAAf,CAA5B,EAAsD,CAACF,OAAD,CAAtD,CAAA,CAAA;AAEA,EAAA,oBACEL,KAAA,CAAAW,aAAA,CAACC,MAAD,EAAO;AACLf,IAAAA,QAAQ,EAAEA,QADL;AAELC,IAAAA,QAAQ,EAAEA,QAFL;IAGLL,QAAQ,EAAEa,KAAK,CAACb,QAHX;IAILoB,cAAc,EAAEP,KAAK,CAAC1B,MAJjB;AAKLkC,IAAAA,SAAS,EAAET,OAAAA;AALN,GAAP,CADF,CAAA;AASD,CAAA;;AAED,IAAa,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAA;EACXY,aAAa,CAACC,WAAd,GAA4B,wBAA5B,CAAA;AACD,CAAA;AAcD,MAAMC,SAAS,GACb,OAAO3B,MAAP,KAAkB,WAAlB,IACA,OAAOA,MAAM,CAAC4B,QAAd,KAA2B,WAD3B,IAEA,OAAO5B,MAAM,CAAC4B,QAAP,CAAgBT,aAAvB,KAAyC,WAH3C,CAAA;AAKA,MAAMU,kBAAkB,GAAG,+BAA3B,CAAA;AAEA;;AAEG;;AACI,MAAMC,IAAI,gBAAGtB,KAAK,CAACuB,UAAN,CAClB,SAASC,WAAT,CAYEC,KAAAA,EAAAA,GAZF,EAYK;EAAA,IAXH;IACEC,OADF;IAEEC,QAFF;IAGEC,cAHF;IAIEC,OAJF;IAKEvB,KALF;IAMEtD,MANF;IAOE8E,EAPF;AAQEC,IAAAA,kBAAAA;GAGC,GAAA,KAAA;AAAA,MAFEC,IAEF,GAAA,6BAAA,CAAA,KAAA,EAAA,SAAA,CAAA,CAAA;;EAEH,IAAI;AAAEnC,IAAAA,QAAAA;AAAF,GAAA,GAAeG,KAAK,CAACiC,UAAN,CAAiBC,wBAAjB,CAAnB,CAFG;;AAKH,EAAA,IAAIC,YAAJ,CAAA;EACA,IAAIC,UAAU,GAAG,KAAjB,CAAA;;EAEA,IAAI,OAAON,EAAP,KAAc,QAAd,IAA0BT,kBAAkB,CAACgB,IAAnB,CAAwBP,EAAxB,CAA9B,EAA2D;AACzD;IACAK,YAAY,GAAGL,EAAf,CAFyD;;AAKzD,IAAA,IAAIX,SAAJ,EAAe;MACb,IAAImB,UAAU,GAAG,IAAI3C,GAAJ,CAAQH,MAAM,CAACC,QAAP,CAAgB8C,IAAxB,CAAjB,CAAA;MACA,IAAIC,SAAS,GAAGV,EAAE,CAACW,UAAH,CAAc,IAAd,CACZ,GAAA,IAAI9C,GAAJ,CAAQ2C,UAAU,CAAChD,QAAX,GAAsBwC,EAA9B,CADY,GAEZ,IAAInC,GAAJ,CAAQmC,EAAR,CAFJ,CAAA;MAGA,IAAIY,IAAI,GAAGC,aAAa,CAACH,SAAS,CAACI,QAAX,EAAqB/C,QAArB,CAAxB,CAAA;;MAEA,IAAI2C,SAAS,CAACK,MAAV,KAAqBP,UAAU,CAACO,MAAhC,IAA0CH,IAAI,IAAI,IAAtD,EAA4D;AAC1D;QACAZ,EAAE,GAAGY,IAAI,GAAGF,SAAS,CAACM,MAAjB,GAA0BN,SAAS,CAACO,IAAzC,CAAA;AACD,OAHD,MAGO;AACLX,QAAAA,UAAU,GAAG,IAAb,CAAA;AACD,OAAA;AACF,KAAA;AACF,GA3BE;;;AA8BH,EAAA,IAAIG,IAAI,GAAGS,OAAO,CAAClB,EAAD,EAAK;AAAEH,IAAAA,QAAAA;AAAF,GAAL,CAAlB,CAAA;AAEA,EAAA,IAAIsB,eAAe,GAAGC,mBAAmB,CAACpB,EAAD,EAAK;IAC5CD,OAD4C;IAE5CvB,KAF4C;IAG5CtD,MAH4C;IAI5C+E,kBAJ4C;AAK5CJ,IAAAA,QAAAA;AAL4C,GAAL,CAAzC,CAAA;;EAOA,SAASwB,WAAT,CACEzG,KADF,EACwD;AAEtD,IAAA,IAAIgF,OAAJ,EAAaA,OAAO,CAAChF,KAAD,CAAP,CAAA;;AACb,IAAA,IAAI,CAACA,KAAK,CAAC0G,gBAAX,EAA6B;MAC3BH,eAAe,CAACvG,KAAD,CAAf,CAAA;AACD,KAAA;AACF,GAAA;;AAED,EAAA;AAAA;AACE;AACAsD,IAAAA,KAAA,CAAAW,aAAA,CAAA,GAAA,eACMqB,IADN,EAAA;MAEEO,IAAI,EAAEJ,YAAY,IAAII,IAFxB;AAGEb,MAAAA,OAAO,EAAEU,UAAU,IAAIR,cAAd,GAA+BF,OAA/B,GAAyCyB,WAHpD;AAIE1B,MAAAA,GAAG,EAAEA,GAJP;AAKEzE,MAAAA,MAAM,EAAEA,MAAAA;AALV,KAAA,CAAA,CAAA;AAFF,IAAA;AAUD,CAvEiB,EAAb;;AA0EP,IAAa,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAA;EACXsE,IAAI,CAACJ,WAAL,GAAmB,MAAnB,CAAA;AACD,CAAA;AAuBD;;AAEG;;;AACI,MAAMmC,OAAO,gBAAGrD,KAAK,CAACuB,UAAN,CACrB,SAAS+B,cAAT,CAWE7B,KAAAA,EAAAA,GAXF,EAWK;EAAA,IAVH;IACE,cAAgB8B,EAAAA,eAAe,GAAG,MADpC;AAEEC,IAAAA,aAAa,GAAG,KAFlB;IAGEC,SAAS,EAAEC,aAAa,GAAG,EAH7B;AAIEC,IAAAA,GAAG,GAAG,KAJR;AAKEC,IAAAA,KAAK,EAAEC,SALT;IAME/B,EANF;AAOEhC,IAAAA,QAAAA;GAGC,GAAA,KAAA;AAAA,MAFEkC,IAEF,GAAA,6BAAA,CAAA,KAAA,EAAA,UAAA,CAAA,CAAA;;AAEH,EAAA,IAAIU,IAAI,GAAGoB,eAAe,CAAChC,EAAD,EAAK;IAAEH,QAAQ,EAAEK,IAAI,CAACL,QAAAA;AAAjB,GAAL,CAA1B,CAAA;EACA,IAAIlC,QAAQ,GAAGsE,WAAW,EAA1B,CAAA;AACA,EAAA,IAAIC,WAAW,GAAGhE,KAAK,CAACiC,UAAN,CAAiBgC,6BAAjB,CAAlB,CAAA;EACA,IAAI;AAAEnD,IAAAA,SAAAA;AAAF,GAAA,GAAgBd,KAAK,CAACiC,UAAN,CAAiBC,wBAAjB,CAApB,CAAA;AAEA,EAAA,IAAIgC,UAAU,GAAGpD,SAAS,CAACqD,cAAV,GACbrD,SAAS,CAACqD,cAAV,CAAyBzB,IAAzB,CAA+BE,CAAAA,QADlB,GAEbF,IAAI,CAACE,QAFT,CAAA;AAGA,EAAA,IAAIwB,gBAAgB,GAAG3E,QAAQ,CAACmD,QAAhC,CAAA;EACA,IAAIyB,oBAAoB,GACtBL,WAAW,IAAIA,WAAW,CAACM,UAA3B,IAAyCN,WAAW,CAACM,UAAZ,CAAuB7E,QAAhE,GACIuE,WAAW,CAACM,UAAZ,CAAuB7E,QAAvB,CAAgCmD,QADpC,GAEI,IAHN,CAAA;;EAKA,IAAI,CAACY,aAAL,EAAoB;AAClBY,IAAAA,gBAAgB,GAAGA,gBAAgB,CAAC9H,WAAjB,EAAnB,CAAA;IACA+H,oBAAoB,GAAGA,oBAAoB,GACvCA,oBAAoB,CAAC/H,WAArB,EADuC,GAEvC,IAFJ,CAAA;AAGA4H,IAAAA,UAAU,GAAGA,UAAU,CAAC5H,WAAX,EAAb,CAAA;AACD,GAAA;;EAED,IAAIiI,QAAQ,GACVH,gBAAgB,KAAKF,UAArB,IACC,CAACP,GAAD,IACCS,gBAAgB,CAAC3B,UAAjB,CAA4ByB,UAA5B,CADD,IAECE,gBAAgB,CAACI,MAAjB,CAAwBN,UAAU,CAACO,MAAnC,CAAA,KAA+C,GAJnD,CAAA;AAMA,EAAA,IAAIC,SAAS,GACXL,oBAAoB,IAAI,IAAxB,KACCA,oBAAoB,KAAKH,UAAzB,IACE,CAACP,GAAD,IACCU,oBAAoB,CAAC5B,UAArB,CAAgCyB,UAAhC,CADD,IAECG,oBAAoB,CAACG,MAArB,CAA4BN,UAAU,CAACO,MAAvC,CAAA,KAAmD,GAJvD,CADF,CAAA;AAOA,EAAA,IAAIE,WAAW,GAAGJ,QAAQ,GAAGhB,eAAH,GAAqBqB,SAA/C,CAAA;AAEA,EAAA,IAAInB,SAAJ,CAAA;;AACA,EAAA,IAAI,OAAOC,aAAP,KAAyB,UAA7B,EAAyC;IACvCD,SAAS,GAAGC,aAAa,CAAC;MAAEa,QAAF;AAAYG,MAAAA,SAAAA;AAAZ,KAAD,CAAzB,CAAA;AACD,GAFD,MAEO;AACL;AACA;AACA;AACA;AACA;IACAjB,SAAS,GAAG,CACVC,aADU,EAEVa,QAAQ,GAAG,QAAH,GAAc,IAFZ,EAGVG,SAAS,GAAG,SAAH,GAAe,IAHd,CAAA,CAKTG,MALS,CAKFC,OALE,CAMTC,CAAAA,IANS,CAMJ,GANI,CAAZ,CAAA;AAOD,GAAA;;EAED,IAAInB,KAAK,GACP,OAAOC,SAAP,KAAqB,UAArB,GACIA,SAAS,CAAC;IAAEU,QAAF;AAAYG,IAAAA,SAAAA;GAAb,CADb,GAEIb,SAHN,CAAA;AAKA,EAAA,oBACE7D,KAAC,CAAAW,aAAD,CAACW,IAAD,eACMU,IADN,EAAA;AAEgB,IAAA,cAAA,EAAA2C,WAFhB;AAGElB,IAAAA,SAAS,EAAEA,SAHb;AAIEhC,IAAAA,GAAG,EAAEA,GAJP;AAKEmC,IAAAA,KAAK,EAAEA,KALT;AAME9B,IAAAA,EAAE,EAAEA,EAAAA;AANN,GAAA,CAAA,EAQG,OAAOhC,QAAP,KAAoB,UAApB,GACGA,QAAQ,CAAC;IAAEyE,QAAF;AAAYG,IAAAA,SAAAA;GAAb,CADX,GAEG5E,QAVN,CADF,CAAA;AAcD,CAxFoB,EAAhB;;AA2FP,IAAa,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAA;EACXuD,OAAO,CAACnC,WAAR,GAAsB,SAAtB,CAAA;AACD,CAAA;AA8CD;;;;;AAKG;;;AACI,MAAM8D,IAAI,gBAAGhF,KAAK,CAACuB,UAAN,CAClB,CAAC0D,KAAD,EAAQxD,GAAR,KAAe;AACb,EAAA,oBAAOzB,KAAA,CAAAW,aAAA,CAACuE,QAAD,eAAcD,KAAd,EAAA;AAAqBxD,IAAAA,GAAG,EAAEA,GAAAA;GAAjC,CAAA,CAAA,CAAA;AACD,CAHiB,CAAb,CAAA;;AAMP,IAAa,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAA;EACXuD,IAAI,CAAC9D,WAAL,GAAmB,MAAnB,CAAA;AACD,CAAA;;AAeD,MAAMgE,QAAQ,gBAAGlF,KAAK,CAACuB,UAAN,CACf,CAAA,KAAA,EAaE4D,YAbF,KAcI;EAAA,IAbF;IACEvD,cADF;IAEEC,OAFF;AAGElD,IAAAA,MAAM,GAAG3C,aAHX;IAIE4C,MAJF;IAKEwG,QALF;IAMEC,UANF;IAOEC,OAPF;IAQE3D,QARF;AASEI,IAAAA,kBAAAA;GAIA,GAAA,KAAA;AAAA,MAHGkD,KAGH,GAAA,6BAAA,CAAA,KAAA,EAAA,UAAA,CAAA,CAAA;;AACF,EAAA,IAAIM,MAAM,GAAGC,aAAa,CAACH,UAAD,EAAaC,OAAb,CAA1B,CAAA;EACA,IAAIG,UAAU,GACZ9G,MAAM,CAACrC,WAAP,OAAyB,KAAzB,GAAiC,KAAjC,GAAyC,MAD3C,CAAA;AAEA,EAAA,IAAIoJ,UAAU,GAAGC,aAAa,CAAC/G,MAAD,EAAS;AAAE+C,IAAAA,QAAAA;AAAF,GAAT,CAA9B,CAAA;;EACA,IAAIiE,aAAa,GAA6ClJ,KAAD,IAAU;AACrE0I,IAAAA,QAAQ,IAAIA,QAAQ,CAAC1I,KAAD,CAApB,CAAA;IACA,IAAIA,KAAK,CAAC0G,gBAAV,EAA4B,OAAA;AAC5B1G,IAAAA,KAAK,CAACmJ,cAAN,EAAA,CAAA;AAEA,IAAA,IAAIC,SAAS,GAAIpJ,KAAoC,CAACqJ,WAArC,CACdD,SADH,CAAA;AAGA,IAAA,IAAIE,YAAY,GACb,CAAAF,SAAS,IAAT,IAAA,GAAA,KAAA,CAAA,GAAAA,SAAS,CAAE9G,YAAX,CAAwB,YAAxB,CAAA,KACDL,MAFF,CAAA;AAIA4G,IAAAA,MAAM,CAACO,SAAS,IAAIpJ,KAAK,CAACuJ,aAApB,EAAmC;AACvCtH,MAAAA,MAAM,EAAEqH,YAD+B;MAEvCnE,OAFuC;MAGvCF,QAHuC;AAIvCI,MAAAA,kBAAAA;AAJuC,KAAnC,CAAN,CAAA;GAZF,CAAA;;AAoBA,EAAA,oBACE/B,KAAA,CAAAW,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA;AACEc,IAAAA,GAAG,EAAE0D,YADP;AAEExG,IAAAA,MAAM,EAAE8G,UAFV;AAGE7G,IAAAA,MAAM,EAAE8G,UAHV;AAIEN,IAAAA,QAAQ,EAAExD,cAAc,GAAGwD,QAAH,GAAcQ,aAAAA;AAJxC,GAAA,EAKMX,KALN,CADF,CAAA,CAAA;AASD,CAjDc,CAAjB,CAAA;;AAoDA,IAAa,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAA;EACXC,QAAQ,CAAChE,WAAT,GAAuB,UAAvB,CAAA;AACD,CAAA;;AAmBD,IAAa,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAA;AAKb;AACA;AACA;;;AAEA,IAAKgF,cAAL,CAAA;;AAAA,CAAA,UAAKA,cAAL,EAAmB;AACjBA,EAAAA,cAAA,CAAA,sBAAA,CAAA,GAAA,sBAAA,CAAA;AACAA,EAAAA,cAAA,CAAA,eAAA,CAAA,GAAA,eAAA,CAAA;AACAA,EAAAA,cAAA,CAAA,YAAA,CAAA,GAAA,YAAA,CAAA;AACD,CAJD,EAAKA,cAAc,KAAdA,cAAc,GAIlB,EAJkB,CAAnB,CAAA,CAAA;;AAMA,IAAKC,mBAAL,CAAA;;AAAA,CAAA,UAAKA,mBAAL,EAAwB;AACtBA,EAAAA,mBAAA,CAAA,aAAA,CAAA,GAAA,aAAA,CAAA;AACAA,EAAAA,mBAAA,CAAA,sBAAA,CAAA,GAAA,sBAAA,CAAA;AACD,CAHD,EAAKA,mBAAmB,KAAnBA,mBAAmB,GAGvB,EAHuB,CAAxB,CAAA,CAAA;;AAKA,SAASC,yBAAT,CACEC,QADF,EACgD;AAE9C,EAAA,OAAUA,QAAV,GAAA,4FAAA,CAAA;AACD,CAAA;;AAED,SAASC,oBAAT,CAA8BD,QAA9B,EAAsD;AACpD,EAAA,IAAIE,GAAG,GAAGvG,KAAK,CAACiC,UAAN,CAAiBuE,wBAAjB,CAAV,CAAA;EACA,CAAUD,GAAV,GAAAE,OAAAA,CAAAA,GAAAA,CAAAA,QAAAA,KAAAA,YAAAA,GAAAA,gBAAS,CAAML,KAAAA,EAAAA,yBAAyB,CAACC,QAAD,CAA/B,CAAT,GAAAI,gBAAS,CAAT,KAAA,CAAA,GAAA,KAAA,CAAA,CAAA;AACA,EAAA,OAAOF,GAAP,CAAA;AACD,CAAA;AAQD;;;;AAIG;;;SACarD,oBACdpB,IAaM,KAAA,EAAA;EAAA,IAZN;IACE9E,MADF;AAEE6E,IAAAA,OAAO,EAAE6E,WAFX;IAGEpG,KAHF;IAIEyB,kBAJF;AAKEJ,IAAAA,QAAAA;AALF,GAYM,sBAAF,EAAE,GAAA,KAAA,CAAA;EAEN,IAAIgF,QAAQ,GAAGC,WAAW,EAA1B,CAAA;EACA,IAAInH,QAAQ,GAAGsE,WAAW,EAA1B,CAAA;AACA,EAAA,IAAIrB,IAAI,GAAGoB,eAAe,CAAChC,EAAD,EAAK;AAAEH,IAAAA,QAAAA;AAAF,GAAL,CAA1B,CAAA;AAEA,EAAA,OAAO3B,KAAK,CAAC6G,WAAN,CACJnK,KAAD,IAA2C;AACzC,IAAA,IAAIK,sBAAsB,CAACL,KAAD,EAAQM,MAAR,CAA1B,EAA2C;MACzCN,KAAK,CAACmJ,cAAN,EAAA,CADyC;AAIzC;;AACA,MAAA,IAAIhE,OAAO,GACT6E,WAAW,KAAK9B,SAAhB,GACI8B,WADJ,GAEII,UAAU,CAACrH,QAAD,CAAV,KAAyBqH,UAAU,CAACpE,IAAD,CAHzC,CAAA;MAKAiE,QAAQ,CAAC7E,EAAD,EAAK;QAAED,OAAF;QAAWvB,KAAX;QAAkByB,kBAAlB;AAAsCJ,QAAAA,QAAAA;AAAtC,OAAL,CAAR,CAAA;AACD,KAAA;GAbE,EAeL,CACElC,QADF,EAEEkH,QAFF,EAGEjE,IAHF,EAIEgE,WAJF,EAKEpG,KALF,EAMEtD,MANF,EAOE8E,EAPF,EAQEC,kBARF,EASEJ,QATF,CAfK,CAAP,CAAA;AA2BD,CAAA;AAED;;;AAGG;;AACG,SAAUoF,eAAV,CACJC,WADI,EAC6B;EAEjC,OAAAC,CAAAA,GAAAA,CAAAA,QAAAA,KAAAA,YAAAA,GAAAA,OAAO,CACL,OAAO7J,eAAP,KAA2B,WADtB,EAEL,meAFK,CAAP,GAAA,KAAA,CAAA,CAAA;EAYA,IAAI8J,sBAAsB,GAAGlH,KAAK,CAACC,MAAN,CAAa/C,kBAAkB,CAAC8J,WAAD,CAA/B,CAA7B,CAAA;AACA,EAAA,IAAIG,qBAAqB,GAAGnH,KAAK,CAACC,MAAN,CAAa,KAAb,CAA5B,CAAA;EAEA,IAAIR,QAAQ,GAAGsE,WAAW,EAA1B,CAAA;AACA,EAAA,IAAI5F,YAAY,GAAG6B,KAAK,CAACoH,OAAN,CACjB;AAEE;AACA;EACApJ,0BAA0B,CACxByB,QAAQ,CAACqD,MADe,EAExBqE,qBAAqB,CAACjH,OAAtB,GAAgC,IAAhC,GAAuCgH,sBAAsB,CAAChH,OAFtC,CALX,EASjB,CAACT,QAAQ,CAACqD,MAAV,CATiB,CAAnB,CAAA;EAYA,IAAI6D,QAAQ,GAAGC,WAAW,EAA1B,CAAA;EACA,IAAIS,eAAe,GAAGrH,KAAK,CAAC6G,WAAN,CACpB,CAACS,QAAD,EAAWC,eAAX,KAA8B;AAC5B,IAAA,MAAMC,eAAe,GAAGtK,kBAAkB,CACxC,OAAOoK,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACnJ,YAAD,CAAzC,GAA0DmJ,QADlB,CAA1C,CAAA;IAGAH,qBAAqB,CAACjH,OAAtB,GAAgC,IAAhC,CAAA;AACAyG,IAAAA,QAAQ,CAAC,GAAA,GAAMa,eAAP,EAAwBD,eAAxB,CAAR,CAAA;AACD,GAPmB,EAQpB,CAACZ,QAAD,EAAWxI,YAAX,CARoB,CAAtB,CAAA;AAWA,EAAA,OAAO,CAACA,YAAD,EAAekJ,eAAf,CAAP,CAAA;AACD,CAAA;;AAiDD,SAAS7B,aAAT,CAAuBH,UAAvB,EAA4CC,OAA5C,EAA4D;EAC1D,IAAI;AAAEmC,IAAAA,MAAAA;AAAF,GAAA,GAAanB,oBAAoB,CAACJ,cAAc,CAACwB,aAAhB,CAArC,CAAA;EACA,IAAIjJ,aAAa,GAAGkH,aAAa,EAAjC,CAAA;EAEA,OAAO3F,KAAK,CAAC6G,WAAN,CACL,UAAC7J,MAAD,EAAS0B,OAAT,EAAyB;AAAA,IAAA,IAAhBA,OAAgB,KAAA,KAAA,CAAA,EAAA;AAAhBA,MAAAA,OAAgB,GAAN,EAAM,CAAA;AAAA,KAAA;;AACvB,IAAA,IAAI,OAAO0C,QAAP,KAAoB,WAAxB,EAAqC;AACnC,MAAA,MAAM,IAAI/B,KAAJ,CACJ,mDAAA,GACE,8DAFE,CAAN,CAAA;AAID,KAAA;;IAED,IAAI;MAAEV,MAAF;MAAUE,OAAV;MAAmBC,QAAnB;AAA6BY,MAAAA,GAAAA;AAA7B,KAAA,GAAqClB,qBAAqB,CAC5DxB,MAD4D,EAE5DyB,aAF4D,EAG5DC,OAH4D,CAA9D,CAAA;IAMA,IAAI6D,IAAI,GAAG7C,GAAG,CAACkD,QAAJ,GAAelD,GAAG,CAACoD,MAA9B,CAAA;AACA,IAAA,IAAI6E,IAAI,GAAG;MACT9F,OAAO,EAAEnD,OAAO,CAACmD,OADR;MAETE,kBAAkB,EAAErD,OAAO,CAACqD,kBAFnB;MAGTjD,QAHS;AAIT2G,MAAAA,UAAU,EAAE9G,MAJH;AAKTiJ,MAAAA,WAAW,EAAE/I,OAAAA;KALf,CAAA;;AAOA,IAAA,IAAIwG,UAAJ,EAAgB;MACd,EAAUC,OAAO,IAAI,IAArB,CAAAmB,GAAAA,OAAAA,CAAAA,GAAAA,CAAAA,QAAAA,KAAAA,YAAAA,GAAAA,gBAAS,QAAkB,uCAAlB,CAAT,GAAAA,gBAAS,CAAT,KAAA,CAAA,GAAA,KAAA,CAAA,CAAA;MACAgB,MAAM,CAACI,KAAP,CAAaxC,UAAb,EAAyBC,OAAzB,EAAkC/C,IAAlC,EAAwCoF,IAAxC,CAAA,CAAA;AACD,KAHD,MAGO;AACLF,MAAAA,MAAM,CAACd,QAAP,CAAgBpE,IAAhB,EAAsBoF,IAAtB,CAAA,CAAA;AACD,KAAA;GA5BE,EA8BL,CAAClJ,aAAD,EAAgBgJ,MAAhB,EAAwBpC,UAAxB,EAAoCC,OAApC,CA9BK,CAAP,CAAA;AAgCD,CAAA;;AAEK,SAAUK,aAAV,CACJ/G,MADI,EAEiD,MAAA,EAAA;EAAA,IAArD;AAAE+C,IAAAA,QAAAA;AAAF,GAAqD,uBAAF,EAAE,GAAA,MAAA,CAAA;EAErD,IAAI;AAAE9B,IAAAA,QAAAA;AAAF,GAAA,GAAeG,KAAK,CAACiC,UAAN,CAAiBC,wBAAjB,CAAnB,CAAA;AACA,EAAA,IAAI4F,YAAY,GAAG9H,KAAK,CAACiC,UAAN,CAAiB8F,mBAAjB,CAAnB,CAAA;EACA,CAAUD,YAAV,2CAAArB,gBAAS,CAAA,KAAA,EAAe,kDAAf,CAAT,GAAAA,gBAAS,CAAT,KAAA,CAAA,GAAA,KAAA,CAAA,CAAA;AAEA,EAAA,IAAI,CAACuB,KAAD,CAAUF,GAAAA,YAAY,CAACG,OAAb,CAAqBC,KAArB,CAA2B,CAAC,CAA5B,CAAd,CANqD;AAQrD;;EACA,IAAIxF,IAAI,gBAAQoB,eAAe,CAAClF,MAAM,GAAGA,MAAH,GAAY,GAAnB,EAAwB;AAAE+C,IAAAA,QAAAA;GAA1B,CAAvB,CAAR,CATqD;AAYrD;AACA;AACA;AACA;;;EACA,IAAIlC,QAAQ,GAAGsE,WAAW,EAA1B,CAAA;;EACA,IAAInF,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA;AACA;AACA8D,IAAAA,IAAI,CAACI,MAAL,GAAcrD,QAAQ,CAACqD,MAAvB,CAAA;AACAJ,IAAAA,IAAI,CAACK,IAAL,GAAYtD,QAAQ,CAACsD,IAArB,CALkB;AAQlB;AACA;;AACA,IAAA,IAAIiF,KAAK,CAACG,KAAN,CAAYC,KAAhB,EAAuB;MACrB,IAAIC,MAAM,GAAG,IAAIjL,eAAJ,CAAoBsF,IAAI,CAACI,MAAzB,CAAb,CAAA;MACAuF,MAAM,CAACC,MAAP,CAAc,OAAd,CAAA,CAAA;AACA5F,MAAAA,IAAI,CAACI,MAAL,GAAcuF,MAAM,CAACE,QAAP,EAAwBF,GAAAA,GAAAA,GAAAA,MAAM,CAACE,QAAP,EAAxB,GAA8C,EAA5D,CAAA;AACD,KAAA;AACF,GAAA;;AAED,EAAA,IAAI,CAAC,CAAC3J,MAAD,IAAWA,MAAM,KAAK,GAAvB,KAA+BoJ,KAAK,CAACG,KAAN,CAAYC,KAA/C,EAAsD;AACpD1F,IAAAA,IAAI,CAACI,MAAL,GAAcJ,IAAI,CAACI,MAAL,GACVJ,IAAI,CAACI,MAAL,CAAYjB,OAAZ,CAAoB,KAApB,EAA2B,SAA3B,CADU,GAEV,QAFJ,CAAA;AAGD,GAtCoD;AAyCrD;AACA;AACA;;;EACA,IAAIhC,QAAQ,KAAK,GAAjB,EAAsB;IACpB6C,IAAI,CAACE,QAAL,GACEF,IAAI,CAACE,QAAL,KAAkB,GAAlB,GAAwB/C,QAAxB,GAAmC2I,SAAS,CAAC,CAAC3I,QAAD,EAAW6C,IAAI,CAACE,QAAhB,CAAD,CAD9C,CAAA;AAED,GAAA;;EAED,OAAOkE,UAAU,CAACpE,IAAD,CAAjB,CAAA;AACD,CAAA;AAyRD;AACA;AACA;;AAEA,SAASuE,OAAT,CAAiBwB,IAAjB,EAAgCC,OAAhC,EAA+C;EAC7C,IAAI,CAACD,IAAL,EAAW;AACT;IACA,IAAI,OAAOE,OAAP,KAAmB,WAAvB,EAAoCA,OAAO,CAACC,IAAR,CAAaF,OAAb,CAAA,CAAA;;IAEpC,IAAI;AACF;AACA;AACA;AACA;AACA;AACA,MAAA,MAAM,IAAIrJ,KAAJ,CAAUqJ,OAAV,CAAN,CANE;AAQH,KARD,CAQE,OAAOG,CAAP,EAAU,EAAE;AACf,GAAA;AACF;;ACpyCD;;AACM,SAAUC,WAAV,CAAsB7D,KAAtB,EAAgC;EACpC,IAAI;IAAExF,QAAF;AAAYiD,IAAAA,IAAAA;AAAZ,GAAA,GAAqBuC,KAAzB,CAAA;AACA,EAAA,IAAI,CAACA,KAAK,CAAC8D,KAAX,EAAkBrG,IAAI,IAAI,IAAR,CAAA;AAClB,EAAA,oBACE1C,KAAC,CAAAW,aAAD,CAACqI,MAAD,EAAQ;AAAAvJ,IAAAA,QAAQ,EAAEA,QAAAA;AAAV,GAAR,eACEO,KAAA,CAAAW,aAAA,CAACsI,KAAD,EAAO;AAAAvG,IAAAA,IAAI,EAAEA,IAAN;AAAYwG,IAAAA,OAAO,eAAElJ,KAAC,CAAAW,aAAD,CAACwI,OAAD,eAAalE,KAAb,CAAA,CAAA;AAArB,GAAP,CADF,CADF,CAAA;AAKD;;AAGD,MAAMmE,iBAAiB,GAAG,CAAC,EACzB,OAAO5J,MAAP,KAAkB,WAAlB,IACA,OAAOA,MAAM,CAAC4B,QAAd,KAA2B,WAD3B,IAEA,OAAO5B,MAAM,CAAC4B,QAAP,CAAgBT,aAAvB,KAAyC,WAHhB,CAA3B,CAAA;AAMA,MAAM0I,yBAAyB,GAAGD,iBAAiB,GAC/CpJ,KAAK,CAACS,eADyC,GAE/C,MAAK,EAFT,CAAA;AAIgB,SAAA6I,YAAA,CAAwD,IAAA,EAAA;EAAA,IAA3C;AAAExJ,IAAAA,QAAAA;GAAyC,GAAA,IAAA,CAAA;EACtE,IAAIO,OAAO,GAAGkJ,UAAU,EAAxB,CAAA;EACA,IAAI,CAACjJ,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACQ,QAAN,CAAe,OAAO;IAC5Cf,QAAQ,EAAEY,OAAO,CAACZ,QAD0B;IAE5Cb,MAAM,EAAEyB,OAAO,CAACzB,MAAAA;AAF4B,GAAP,CAAf,CAAxB,CAAA;AAKAyK,EAAAA,yBAAyB,CAAC,MAAK;IAC7BhJ,OAAO,CAACK,MAAR,CAAe,CAACjB,QAAD,EAAqBb,MAArB,KACb2B,QAAQ,CAAC;MAAEd,QAAF;AAAYb,MAAAA,MAAAA;AAAZ,KAAD,CADV,CAAA,CAAA;AAGD,GAJwB,EAItB,CAACyB,OAAD,CAJsB,CAAzB,CAAA;AAMA,EAAA,oBACEL,KAAC,CAAAW,aAAD,CAACC,MAAD;IACEC,cAAc,EAAEP,KAAK,CAAC1B;IACtBa,QAAQ,EAAEa,KAAK,CAACb;AAChBqB,IAAAA,SAAS,EAAET,OAAAA;GAHb,eAKEL,KAAA,CAAAW,aAAA,CAACqI,MAAD,EAAO,IAAP,eACEhJ,KAAA,CAAAW,aAAA,CAACsI,KAAD,EAAM;AAACvG,IAAAA,IAAI,EAAC,GAAN;AAAUwG,IAAAA,OAAO,EAAEpJ,QAAAA;GAAzB,CADF,CALF,CADF,CAAA;AAWD,CAAA;AAQD;;;AAGG;;AACa,SAAA0J,YAAA,CAII,KAAA,EAAA;EAAA,IAJS;IAC3B3J,QAD2B;IAE3BC,QAF2B;IAG3BL,QAAQ,EAAEgK,YAAY,GAAG,GAAA;GACP,GAAA,KAAA,CAAA;;AAClB,EAAA,IAAI,OAAOA,YAAP,KAAwB,QAA5B,EAAsC;AACpCA,IAAAA,YAAY,GAAGC,SAAS,CAACD,YAAD,CAAxB,CAAA;AACD,GAAA;;AAED,EAAA,IAAI7K,MAAM,GAAG+K,MAAM,CAACC,GAApB,CAAA;AACA,EAAA,IAAInK,QAAQ,GAAa;AACvBmD,IAAAA,QAAQ,EAAE6G,YAAY,CAAC7G,QAAb,IAAyB,GADZ;AAEvBE,IAAAA,MAAM,EAAE2G,YAAY,CAAC3G,MAAb,IAAuB,EAFR;AAGvBC,IAAAA,IAAI,EAAE0G,YAAY,CAAC1G,IAAb,IAAqB,EAHJ;AAIvBzC,IAAAA,KAAK,EAAEmJ,YAAY,CAACnJ,KAAb,IAAsB,IAJN;AAKvB3C,IAAAA,GAAG,EAAE8L,YAAY,CAAC9L,GAAb,IAAoB,SAAA;GAL3B,CAAA;AAQA,EAAA,IAAIkM,eAAe,GAAG;IACpBC,UAAU,CAAChI,EAAD,EAAO;MACf,OAAO,OAAOA,EAAP,KAAc,QAAd,GAAyBA,EAAzB,GAA8BgF,YAAU,CAAChF,EAAD,CAA/C,CAAA;KAFkB;;IAIpBqC,cAAc,CAACrC,EAAD,EAAO;AACnB,MAAA,IAAIY,IAAI,GAAG,OAAOZ,EAAP,KAAc,QAAd,GAAyB4H,SAAS,CAAC5H,EAAD,CAAlC,GAAyCA,EAApD,CAAA;MACA,OAAO;AACLc,QAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAL,IAAiB,EADtB;AAELE,QAAAA,MAAM,EAAEJ,IAAI,CAACI,MAAL,IAAe,EAFlB;AAGLC,QAAAA,IAAI,EAAEL,IAAI,CAACK,IAAL,IAAa,EAAA;OAHrB,CAAA;KANkB;;IAYpBgH,IAAI,CAACjI,EAAD,EAAO;MACT,MAAM,IAAIzC,KAAJ,CACJ,0EAEgB2K,GAAAA,gEAAAA,IAAAA,YAAAA,GAAAA,IAAI,CAACC,SAAL,CAAenI,EAAf,CAFhB,GAAA,2BAAA,CADI,CAAN,CAAA;KAbkB;;IAmBpBD,OAAO,CAACC,EAAD,EAAO;MACZ,MAAM,IAAIzC,KAAJ,CACJ,6EAEgB2K,GAAAA,gEAAAA,IAAAA,YAAAA,GAAAA,IAAI,CAACC,SAAL,CAAenI,EAAf,CAFhB,GAAA,kCAAA,CAAA,GAAA,cADI,CAAN,CAAA;KApBkB;;IA2BpBoI,EAAE,CAACC,KAAD,EAAc;AACd,MAAA,MAAM,IAAI9K,KAAJ,CACJ,wEAEgB8K,GAAAA,gEAAAA,IAAAA,YAAAA,GAAAA,KAFhB,+BADI,CAAN,CAAA;KA5BkB;;AAkCpBC,IAAAA,IAAI,GAAA;AACF,MAAA,MAAM,IAAI/K,KAAJ,CACJ,0EAAA,GAAA,cADI,CAAN,CAAA;KAnCkB;;AAwCpBgL,IAAAA,OAAO,GAAA;AACL,MAAA,MAAM,IAAIhL,KAAJ,CACJ,6EAAA,GAAA,cADI,CAAN,CAAA;AAID,KAAA;;GA7CH,CAAA;AAgDA,EAAA,oBACEW,KAAA,CAAAW,aAAA,CAACC,MAAD,EAAO;AACLf,IAAAA,QAAQ,EAAEA,QADL;AAELC,IAAAA,QAAQ,EAAEA,QAFL;AAGLL,IAAAA,QAAQ,EAAEA,QAHL;AAILoB,IAAAA,cAAc,EAAEjC,MAJX;AAKLkC,IAAAA,SAAS,EAAE+I,eALN;AAMLS,IAAAA,MAAM,EAAE,IAAA;AANH,GAAP,CADF,CAAA;AAUD;;;;"}